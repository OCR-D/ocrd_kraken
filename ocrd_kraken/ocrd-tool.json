{
  "git_url": "https://github.com/OCR-D/ocrd_kraken",
  "version": "0.4.1",
  "tools": {
    "ocrd-kraken-binarize": {
      "executable": "ocrd-kraken-binarize",
      "input_file_grp": ["OCR-D-IMG", "OCR-D-PRE-CROP", "OCR-D-SEG-REGION", "OCR-D-SEG-LINE"],
      "output_file_grp": ["OCR-D-PRE-BIN"],
      "categories": [
        "Image preprocessing"
      ],
      "steps": [
        "preprocessing/optimization/binarization"
      ],
      "description": "Binarize images with kraken",
      "parameters": {
        "level-of-operation": {
          "description": "segment hierarchy level to operate on",
          "type": "string",
          "default": "page",
          "enum": ["page", "region", "line"]
        }
      }
    },
    "ocrd-kraken-segment": {
      "executable": "ocrd-kraken-segment",
      "input_file_grp": ["OCR-D-IMG", "OCR-D-PRE-CROP", "OCR-D-PRE-BIN"],
      "output_file_grp": ["OCR-D-SEG-REGION", "OCR-D-SEG-LINE"],
      "categories": [
        "Layout analysis"
      ],
      "steps": [
        "layout/segmentation/region",
        "layout/segmentation/line"
      ],
      "description": "Layout segmentation with Kraken",
      "parameters": {
        "level-of-operation": {
          "description": "segment hierarchy level to operate on (page into regions+lines, or regions into lines)",
          "type": "string",
          "default": "page",
          "enum": ["page", "table", "region"]
        },
        "overwrite_segments": {
          "description": "remove any existing regions/lines", 
          "type": "boolean", 
          "default": false
        },
        "text_direction": {
          "type": "string", 
          "description": "Sets principal text direction", 
          "enum": ["horizontal-lr", "horizontal-rl", "vertical-lr", "vertical-rl"], 
          "default": "horizontal-lr"
        },
        "maxcolseps": {
          "description": "Maximum number of column separators. Set to 0 for single-column text to avoid unnecessary computation.", 
          "type": "number", 
          "format": "integer", 
          "default": 2
        },
        "scale": {
          "description": "mean xheight size of glyphs (guessed if zero)", 
          "type": "number", 
          "format": "float", 
          "default": 0
        },
        "black_colseps": {
          "description": "Whether column separators are assumed to be vertical black lines or not", 
          "type": "boolean", 
          "default": false
        },
        "remove_hlines": {
          "description": "Remove horizontal colseps before segmentation", 
          "type": "boolean", 
          "default": true
        },
        "blla_model": {
          "description": "Model used for baseline detection and page segmentation. Ignored if use_legacy.",
          "type": "string",
          "format": "uri",
          "content-type": "application/python-cpickle",
          "cacheable": true,
          "default": "blla.mlmodel"
        },
        "blla_classes": {
          "description": "Class mapping for the region types trained into blla_model.",
          "type": "object",
          "minProperties": 2,
          "additionalProperties": { "type": "string",
                                    "enum": ["TextRegion", "ImageRegion", "LineDrawingRegion",
                                             "GraphicRegion", "TableRegion", "ChartRegion",
                                             "MapRegion", "SeparatorRegion", "MathsRegion",
                                             "ChemRegion", "MusicRegion", "AdvertRegion",
                                             "NoiseRegion", "UnknownRegion", "CustomRegion"] },
          "default": {"text": "TextRegion", "image": "ImageRegion", "line drawing": "LineDrawingRegion",
                      "graphic": "GraphicRegion", "table": "TableRegion", "chart": "ChartRegion",
                      "map": "MapRegion", "separator": "SeparatorRegion", "maths": "MathsRegion",
                      "chem": "ChemRegion", "music": "MusicRegion", "advert": "AdvertRegion",
                      "noise": "NoiseRegion", "unknown": "UnknownRegion", "custom": "CustomRegion"}
        },
        "device": {
          "description": "CUDA ID (e.g. 'cuda:0') for computation on GPU (if available), or 'cpu' to run on CPU only",
          "type": "string",
          "default": "cuda:0"
        },
        "use_legacy": {
          "description": "Use legacy box segmenter as opposed to neural net baseline segmenter",
          "type": "boolean",
          "default": false
        }
      },
      "resources": [
        {
          "url": "https://github.com/mittagessen/kraken/raw/main/kraken/blla.mlmodel",
          "size": 5047020,
          "name": "blla.mlmodel",
          "parameter_usage": "without-extension",
          "description": "Pretrained region+baseline segmentation model (trained on handwriting)"
        },
        {
          "url": "https://ub-backup.bib.uni-mannheim.de/~stweil/tesstrain/kraken/ubma_segmentation/ubma_segmentation.mlmodel",
          "size": 5047020,
          "name": "ubma_segmentation.mlmodel",
          "parameter_usage": "without-extension",
          "description": "region+baseline segmentation model trained by UBMA (on print)"
        }
      ]
    },
    "ocrd-kraken-recognize": {
      "executable": "ocrd-kraken-recognize",
      "input_file_grp": ["OCR-D-SEG-LINE"],
      "output_file_grp": ["OCR-D-OCR-KRAK"],
      "categories": ["Text recognition and optimization"],
      "steps": ["recognition/text-recognition"],
      "description": "Text recognition with Kraken",
      "parameters": {
        "overwrite_text": {
          "description": "remove any existing TextEquiv", 
          "type": "boolean", 
          "default": false
        },
        "model": {
          "description": "OCR model to recognize with",
          "type": "string",
          "format": "uri",
          "content-type": "application/python-cpickle",
          "cacheable": true,
          "default": "en_best.mlmodel"
        },
        "pad": {
          "description": "Extra blank padding to the left and right of text line.",
          "type": "number",
          "format": "integer",
          "default": 16
        },
        "bidi_reordering": {
          "description": "Reorder classes in the ocr_record according to  the Unicode bidirectional algorithm for correct display.",
          "type": "boolean",
          "default": true
        },
        "device": {
          "description": "CUDA ID (e.g. 'cuda:0') for computation on GPU (if available), or 'cpu' to run on CPU only",
          "type": "string",
          "default": "cuda:0"
        }
      },
      "resources": [
        {
          "url": "https://ub-backup.bib.uni-mannheim.de/~stweil/tesstrain/kraken/austriannewspapers/20220520/austriannewspapers_best.mlmodel",
          "size": 16243476,
          "name": "austriannewspapers.mlmodel",
          "parameter_usage": "without-extension",
          "description": "19th and 20th century German Fraktur; https://github.com/UB-Mannheim/AustrianNewspapers/wiki/Training-with-Kraken"
        },
        {
          "url": "https://ub-backup.bib.uni-mannheim.de/~stweil/tesstrain/kraken/reichsanzeiger-gt/reichsanzeiger_best.mlmodel",
          "size": 16358636,
          "name": "reichsanzeiger.mlmodel",
          "parameter_usage": "without-extension",
          "description": "19th and 20th century German Fraktur ('Deutscher Reichsanzeiger'); https://github.com/UB-Mannheim/reichsanzeiger-gt/wiki/Training-with-Kraken"
        },
        {
          "url": "https://ub-backup.bib.uni-mannheim.de/~stweil/tesstrain/kraken/digitue-gt/digitue_best.mlmodel",
          "size": 16364343,
          "name": "digitue.mlmodel",
          "parameter_usage": "without-extension",
          "description": "mostly 19th century German Fraktur; https://github.com/UB-Mannheim/digitue-gt/wiki/Training-with-Kraken"
        },
        {
          "url": "https://ub-backup.bib.uni-mannheim.de/~stweil/tesstrain/kraken/digi-gt/luther_best.mlmodel",
          "size": 16305851,
          "name": "luther.mlmodel",
          "parameter_usage": "without-extension",
          "description": "16th century German Gothic; https://github.com/UB-Mannheim/digi-gt/wiki/Training"
        },
        {
          "url": "https://ub-backup.bib.uni-mannheim.de/~stweil/tesstrain/kraken/typewriter/typewriter.mlmodel",
          "size": 16364780,
          "name": "typewriter.mlmodel",
          "parameter_usage": "without-extension",
          "description": "20th century typewriter http://idb.ub.uni-tuebingen.de/opendigi/walz_1976, pretrained on austriannewspapers.mlmodel"
        },
        {
          "url": "https://zenodo.org/record/2577813/files/en_best.mlmodel?download=1",
          "size": 2930723,
          "name": "en_best.mlmodel",
          "parameter_usage": "without-extension",
          "description": "This model has been trained on a large corpus of modern printed English text augmented with ~10000 lines of historical pages"
        }
      ]
    }
  }
}
